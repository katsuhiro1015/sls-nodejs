{
  "service": {
    "service": "nodejs-service-js",
    "serviceObject": {
      "name": "nodejs-service-js"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs14.x",
      "lambdaHashingVersion": "20201221",
      "stage": "dev",
      "region": "ap-northeast-1",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "HelloLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/nodejs-service-js-dev-hello"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "nodejs-service-js",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/nodejs-service-js-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/nodejs-service-js-dev*:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "nodejs-service-js",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "HelloLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/nodejs-service-js/dev/1636882783360-2021-11-14T09:39:43.360Z/nodejs-service-js.zip"
              },
              "Handler": "handler.hello",
              "Runtime": "nodejs14.x",
              "FunctionName": "nodejs-service-js-dev-hello",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "HelloLogGroup"
            ]
          },
          "HelloLambdaVersionn0VKppzhbo6XodNxYuYl3YG9vf1o60NTyr6qRDb5I": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "HelloLambdaFunction"
              },
              "CodeSha256": "ZncbDtxp0CGehoHAPTbGk5AlxsbIb53e0YHX6NFA2NU="
            }
          },
          "HelloAlbTargetGroupexampleLoadBalancerListener": {
            "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
            "Properties": {
              "TargetType": "lambda",
              "Targets": [
                {
                  "Id": {
                    "Fn::GetAtt": [
                      "HelloLambdaFunction",
                      "Arn"
                    ]
                  }
                }
              ],
              "Name": "a28bf8fe95447c70f70f2d275946c939",
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "nodejs-service-js-hello-exampleLoadBalancerListener-dev"
                }
              ],
              "TargetGroupAttributes": [
                {
                  "Key": "lambda.multi_value_headers.enabled",
                  "Value": false
                }
              ],
              "HealthCheckEnabled": false
            },
            "DependsOn": [
              "HelloLambdaPermissionRegisterTarget"
            ]
          },
          "HelloAlbListenerRule1": {
            "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
            "Properties": {
              "Actions": [
                {
                  "Type": "forward",
                  "TargetGroupArn": {
                    "Ref": "HelloAlbTargetGroupexampleLoadBalancerListener"
                  }
                }
              ],
              "Conditions": [
                {
                  "Field": "path-pattern",
                  "Values": [
                    "/js"
                  ]
                }
              ],
              "ListenerArn": {
                "Ref": "exampleLoadBalancerListener"
              },
              "Priority": 1
            }
          },
          "HelloLambdaPermissionAlb": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "HelloLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "elasticloadbalancing.amazonaws.com",
              "SourceArn": {
                "Ref": "HelloAlbTargetGroupexampleLoadBalancerListener"
              }
            }
          },
          "HelloLambdaPermissionRegisterTarget": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "HelloLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "elasticloadbalancing.amazonaws.com"
            }
          },
          "exampleLoadBalancer": {
            "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
            "Properties": {
              "Name": "serverless-alb",
              "Scheme": "internet-facing",
              "Subnets": [
                "subnet-00cddf4ee9ec23dc3",
                "subnet-002e4333c00b213c7"
              ],
              "SecurityGroups": [
                "sg-12f03a5f"
              ]
            }
          },
          "exampleLoadBalancerListener": {
            "Type": "AWS::ElasticLoadBalancingV2::Listener",
            "Properties": {
              "DefaultActions": [
                {
                  "Type": "fixed-response",
                  "FixedResponseConfig": {
                    "ContentType": "text/html",
                    "MessageBody": "<h1>Not Found</h1>",
                    "StatusCode": 404
                  }
                }
              ],
              "LoadBalancerArn": {
                "Ref": "exampleLoadBalancer"
              },
              "Port": 80,
              "Protocol": "HTTP"
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-nodejs-service-js-dev-ServerlessDeploymentBucketName"
            }
          },
          "HelloLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "HelloLambdaVersionn0VKppzhbo6XodNxYuYl3YG9vf1o60NTyr6qRDb5I"
            },
            "Export": {
              "Name": "sls-nodejs-service-js-dev-HelloLambdaFunctionQualifiedArn"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "pluginsData": {},
    "functions": {
      "hello": {
        "handler": "handler.hello",
        "events": [
          {
            "alb": {
              "listenerArn": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"HelloAlbListenerRule1\"][\"Properties\"][\"ListenerArn\"]"
              },
              "priority": 1,
              "conditions": {
                "path": [
                  "/js"
                ]
              }
            }
          }
        ],
        "name": "nodejs-service-js-dev-hello",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "HelloLambdaVersionn0VKppzhbo6XodNxYuYl3YG9vf1o60NTyr6qRDb5I"
      }
    },
    "resources": {
      "Resources": {
        "exampleLoadBalancer": {
          "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
          "Properties": {
            "Name": "serverless-alb",
            "Scheme": "internet-facing",
            "Subnets": [
              "subnet-00cddf4ee9ec23dc3",
              "subnet-002e4333c00b213c7"
            ],
            "SecurityGroups": [
              "sg-12f03a5f"
            ]
          }
        },
        "exampleLoadBalancerListener": {
          "Type": "AWS::ElasticLoadBalancingV2::Listener",
          "Properties": {
            "DefaultActions": [
              {
                "Type": "fixed-response",
                "FixedResponseConfig": {
                  "ContentType": "text/html",
                  "MessageBody": "<h1>Not Found</h1>",
                  "StatusCode": 404
                }
              }
            ],
            "LoadBalancerArn": {
              "Ref": "exampleLoadBalancer"
            },
            "Port": 80,
            "Protocol": "HTTP"
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": {
        "$ref": "$[\"service\"][\"serviceObject\"]"
      },
      "frameworkVersion": "2",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "/Users/katsuhiro/project/github/sls-nodejs/nodejs-service-js/.serverless/nodejs-service-js.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/nodejs-service-js/dev/1636882783360-2021-11-14T09:39:43.360Z",
    "artifact": "nodejs-service-js.zip"
  }
}